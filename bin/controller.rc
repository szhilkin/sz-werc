#!/usr/local/plan9/bin/rc
path=(. ./bin $PLAN9/bin /bin/ /usr/bin)

uri = `{echo -n $REQUEST_URI | sed 's/\?.*//; s/[^a-zA-Z0-9_+\-\/]//g'}
ifs='/' {
	args = `{echo -n $uri}
}
cd ..

# default config
site=$SERVER_NAME
sitedir=sites/$site
headers=inc/headers.tpl
body=index
template=_default
sidebar=sidebar
basedir=/gsoc/www
baseuri=http://$site
for(i in siteTitle siteSubTitle title extraHeaders)
    $i = ''

# Title
fn gentitle {
    echo '<h1 class="headerTitle"><a href="/">' ^ $"siteTitle ^ '<span id="headerSubTitle">' ^ $"siteSubTitle ^ '</span></a></h1>'
}

dirfilter = '/\/[._]/d; s,^\./,,; s,\.md$,,;'

# Sidebar 
fn menu {
    ls -F $1 | sed $dirfilter | awk -F/ '
    BEGIN { print "<ul class=\"sidebar\">" }
    END { print "</ul>" }
    /^([a-zA-Z0-9+_\-]+[\/*]?)+$/ && $NF != "index" {
        isdir = match($0, "/$")
        sub("[*/]$", "")

        path = bname = $0
        sub("^(.*/)?([0-9]+_)?", "", bname)
        gsub("_", " ", bname)

        if(isdir) {
            bname = bname "/"
            path = $0 "/"
        }

        if(index(ENVIRON["REQUEST_URI"], "/" path) == 1) {
            if(isdir) {
                print "<li><a href=\"/" path "\" class=\"thisPage\">&raquo;<i> " bname "</i></a>"
                system("rc -c ''menu " path "''")
            } else {
                print "<li><a href=\"/" path "\" class=\"thisPage\">&raquo;<i> " bname "</i></a>"
            }
        } else 
            print "<li><a href=\"/" path "\">&rsaquo; " bname "</a>"

        print "</li>"
    }'
}

fn gensidebar {
    @{
        cd $sitedir
        menu .
    }
}

fn sortedBlogPostList {
    # the /./ is added so we can sort -t. and order only the file name
    if (! ~ $#* 0)
        ls $*^'/./' | grep '[0-9]+.*\.md$'| sort -r -t. +1
}

# Body
fn genbody {
    if ( test -f $body.md )
        markdown.pl < $body.md
    if not if ( test -f $body.tpl )
        template.awk $body.tpl | rc $rcargs
    if not if ( ~ $body */blog/index */blog//index && ~ $#blogDirs 0 )
        blogDirs = `{basename -d $body}
    if not if(~ $body */index && ~ $#blogDirs 0) {
            echo '<h1>' `{basename `{basename -d $body}}'</h1>'
            echo '<ul>'
            ls -F `{ basename -d $body } | sed $dirfilter' s,^'$sitedir'/(.*),<li><a href="\1">\1</a></li>,'
            echo '</ul>'
    }
    if not if(~ $#blogDirs 0)
        template.awk inc/404.tpl | rc $rcargs

    # Technically wrong. Will spit out blog entries after 404 for /blog/foo, for instance.
    if(! ~ $#blogDirs 0) {
        if ( ! ~ $blogTitle '' )
            echo '<h1>'$"blogTitle'</h1>'
	echo '<div align="right">(<a href="index.rss">rss feed</a>)</div>'
        for ( f in `{ sortedBlogPostList $blogDirs } ) {
            title=`{basename $f | sed 's/^[0-9\-]*_(.*)\.md$/\1/; s/_/ /g' }
            du=`{ls -l $f}
            echo '##' $title '*('By $du(4) Last mod: $du(7 8 9) ')*'
            cat $f 
            echo 
        } | markdown.pl 
    }
}


. etc/initrc

if (! ~ $args '') {
    title=$args($#args)
    title=`{echo $title | sed 's/_/ /g' }
    body=$uri
}

fpath=$sitedir
for ( i in '' $args ) {
    fpath = $fpath/$i
    if ( test -f $fpath/_config )
        . $fpath/_config
}

template=$sitedir/$template.tpl
if (! ~ $#sidebar 0)
    sidebar=tpl/_inc/$sidebar.tpl

body=$sitedir/$body
rssuri=$uri
if (test -d $body) {
    body=$body/index
    rssuri=$rssuri/
}

if(! ~ $#blogDirs 0) {
    rssuri=`{basename -d $uri}
    rssuri=$baseuri`{cleanname $"rssuri^/index.rss}
    extraHeaders=$"extraHeaders ^ \
    	'<link rel="alternate" type="application/rss+xml" title="RSS" href="'$rssuri'">
'
}

# RSS
fn statpost {
	f = $1
	uri = `{echo $f | sed 's,^'$basedir',,'}
	title=`{basename $f | sed 's/^[0-9\-]*_(.*)\.md$/\1/; s/_/ /g' }
	stat=`{stat -c '%Y %U' $f}
	date=`{/bin/date -Rd @$stat(1)}
	uri=$baseuri^`{cleanname `{echo -n $uri | sed 's/\.(md|tpl)//g'}}
	by=$stat(2)
	ifs=() {
		summary=`{awk -v max'='1024 '{
			nc += 1 + length;
			if(nc > max) {
				print substr($0, 1, nc - max) "..."
				exit
			}
			print
		}' $f | sed 's/\]\]>/Fucking goddamn XML garbage/g'}
	}
}

fn template {
    template.awk | rc $rcargs |
    awk '{
        buf = buf $0"\n"
        if(length(buf) > 8192) {
            printf "%s", buf
            buf = ""
        }
    }
    END{ printf "%s", buf }'
}

if(! ~ $REQUEST_URI */index.rss) {
	cat $headers $template | template
	exit
}

uri = `{echo $uri | sed 's/indexrss$//'}
uri=$baseuri$"uri

# Should be in a separate file.
cat <<'!' | template
Content-Type: text/xml; charset=utf-8

<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title>%($siteTitle%)</title>
		<link>%($uri%)</link>
		<description>%($blogDesc%)</description>
		<language>en-us</language>
		<generator>Tom Duff's rc, and Kris Maglione's clever hackery</generator>
		<webMaster>Uriel Mangado &lt;uriel99@gmail.com&gt;</webMaster>
%{
		for(f in `{sortedBlogPostList $blogDirs}) {
			statpost $f
%}		<item>
			<title>%($title%)</title>
			<author>%($by%)@noreply.cat-v.org</author>
			<link>%($uri%)</link>
                        <guid isPermaLink="true">%($uri%)</guid>
			<pubDate>%($date%)</pubDate>
			<description><![CDATA[<pre>%($summary%)</pre>]]></description>
		</item>
%		}
	</channel>
</rss>
!

